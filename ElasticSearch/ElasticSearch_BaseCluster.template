{
	"AWSTemplateFormatVersion": "2010-09-09", 
	"Description": "ElasticSearch Base Cluster", 
	"Mappings": {
		"AWSInstanceType2Arch": {
			"m1.large": {
				"Arch": "64"
			}, 
			"m1.medium": {
				"Arch": "64"
			}, 
			"m1.small": {
				"Arch": "64"
			}, 
			"m1.xlarge": {
				"Arch": "64"
			},
			"m1.2xlarge": {
				"Arch": "64"
			}
		}, 
		"DistroArch2AMI": {
			"RHEL-6.5": {
				"32": "NOT IMPLEMENTED", 
				"64": "rhel-guest-image-6.5-20140411.0.x86_64"
			}, 
			"CENTOS-6.5": {
				"32": "NOT IMPLEMENTED", 
				"64": "centos-6.5-20140117.0"
			} 
		}
	}, 
	"Outputs": {
		"LoadBalancerId": {
			"Description": "Load Balancer Id", 
			"Value": {
				"Ref": "LoadBalancer"
			}
		}, 
		"LoadBalancerIp": {
			"Description": "Load Balancer Ip", 
			"Value": {
				"Fn::Join": [
					"", 
					[
						{ "Ref" : "BackendIpPrefix" },
						".2"
					]
				]
			}
		}, 
		"LoadBalancerPort": {
			"Description": "Load Balancer Port", 
			"Value": 9200
		},
		"PrimaryMasterSecurityGroup": {
			"Description": "Primary Master Security Group ID", 
			"Value": {
				"Ref": "PrimaryMasterSecurityGroup"
			}
		}, 
		"PrimaryDataSecurityGroup": {
			"Description": "Primary Data Security Group ID", 
			"Value": {
				"Ref": "PrimaryDataSecurityGroup"
			}
		}, 
		"BackendSecurityGroup": {
			"Description": "Backend Security Group ID", 
			"Value": {
				"Ref": "BackendSecurityGroup"
			}
		}, 
		"BackendNetworkId": {
			"Description": "Backend Network ID", 
			"Value": {
				"Fn::GetAtt": [
					"BackendNetwork", 
					"Outputs.NetworkId"
				]
			}
		}, 
		"BackendSubnetId": {
			"Description": "Backend Subnet ID", 
			"Value": {
				"Fn::GetAtt": [
					"BackendNetwork", 
					"Outputs.SubnetId"
				]
			}
		}, 
		"MasterSvr1": {
			"Description": "public DNS name of the ElasticSearch master server 1", 
			"Value": {
				"Fn::GetAtt": [
					"MasterCluster", 
					"Outputs.MasterSvr1"
				]
			}
		}, 
		"MasterSvr2": {
			"Description": "public DNS name of the ElasticSearch master server 2", 
			"Value": {
				"Fn::GetAtt": [
					"MasterCluster", 
					"Outputs.MasterSvr2"
				]
			}
		}, 
		"MasterSvr3": {
			"Description": "public DNS name of the ElasticSearch master server 3", 
			"Value": {
				"Fn::GetAtt": [
					"MasterCluster", 
					"Outputs.MasterSvr3"
				]
			}
		}
	}, 
	"Parameters": {
		"ElasticSearchVersion": {
			"Description": "ElasticSearch Version", 
			"Default": "1.2.1",
			"Type": "String"
		},
		"ElasticSearchBaseURL": {
			"Description": "ElasticSearch Base URL", 
			"Default": "https://download.elasticsearch.org/elasticsearch/elasticsearch",
			"Type": "String"
		},
		"BackendIpPrefix": {
			"Default": "10.0.102", 
			"Description": "Ip Prefix to use", 
			"Type": "String"
		}, 
		"TemplateBaseUrl": {
			"Default": "https://raw.githubusercontent.com/elastx/heat-templates/master/ElasticSearch", 
			"Description": "URL for templates", 
			"Type": "String"
		}, 
		"InstanceType": {
			"AllowedValues": [
				"m1.small", 
				"m1.large", 
				"m1.xlarge", 
				"m1.2xlarge" 
			], 
			"Default": "m1.large", 
			"Description": "EC2 instance type (e.g. m1.large, m1.xlarge, m2.xlarge)", 
			"Type": "String"
		}, 
		"InstanceTypeMasterSvr": {
			"AllowedValues": [
				"m1.small", 
				"m1.large", 
				"m1.xlarge", 
				"m1.2xlarge" 
			], 
			"Default": "m1.small", 
			"Description": "EC2 instance type (e.g. m1.large, m1.xlarge, m2.xlarge)", 
			"Type": "String"
		}, 
		"InstanceZone": {
			"Default": "se-sthlm-1a", 
			"Description": "AvailabilityZone for this instance", 
			"Type": "String"
		}, 
		"KeyName": {
			"Description": "Name of an existing EC2 KeyPair to enable SSH access", 
			"Type": "String"
		}, 
		"LinuxDistribution": {
			"AllowedValues": [
				"CENTOS-6.5", 
				"RHEL-6.5"
			], 
			"Default": "CENTOS-6.5", 
			"Description": "Distribution of choice", 
			"Type": "String"
		}, 
		"PrimaryNetworkId": {
			"Description": "PrimaryNetworkId", 
			"Type": "String"
		}
	}, 
	"Resources": {
		"PrimaryMasterSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Primary Master Server Security Group",
				"SecurityGroupIngress" : [
					{"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" },
					{"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" }
				],
				"VpcId": { "Ref": "PrimaryNetworkId" }
			}
		},
		"PrimaryDataSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Primary Master Server Security Group",
				"SecurityGroupIngress" : [
					{"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" }
				],
				"VpcId": { "Ref": "PrimaryNetworkId" }
			}
		},
		"BackendSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Backend Master Server Security Group",
				"SecurityGroupIngress" : [
					{"IpProtocol" : "icmp" },
					{"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" },
					{"IpProtocol" : "tcp", "FromPort" : "9200", "ToPort" : "9299", "CidrIp" : "0.0.0.0/0" },
					{"IpProtocol" : "tcp", "FromPort" : "9300", "ToPort" : "9400", "CidrIp" : "0.0.0.0/0" }
				],
				"VpcId": {
					"Fn::GetAtt": [
						"BackendNetwork",
						"Outputs.NetworkId"
					]
				}
			}
		},
		"BackendNetwork": {
			"Properties": {
				"Parameters": {
					"IpPrefix": {
						"Ref": "BackendIpPrefix"
					},
					"ClusterName": {
						"Ref" : "AWS::StackName"
					}
				}, 
				"TemplateURL": {
					"Fn::Join": [
						"",
						[
							{ "Ref": "TemplateBaseUrl" },
							"/ElasticSearch_Network.template"
						]
					]
				}
			}, 
			"Type": "AWS::CloudFormation::Stack"
		}, 
		"LoadBalancerMonitor": {
			"Type": "OS::Neutron::HealthMonitor",
			"Properties": {
				"delay": 60,
				"max_retries": 5,
				"timeout": 10,
				"type": "HTTP",
				"url_path": "/_cluster/nodes"
			}
		},
		"LoadBalancer" : {
			"Type" : "OS::Neutron::Pool",
			"Properties" : {
				"name": {
					"Fn::Join": [
						"", 
						[
							{ "Ref" : "AWS::StackName" },
							"-LoadBalancer"
						]
					]
				},
				"protocol": "HTTP",
				"subnet_id": {
					"Fn::GetAtt": [
						"BackendNetwork",
						"Outputs.SubnetId"
					]
				},
				"lb_method": "LEAST_CONNECTIONS",
				"monitors": [ { "Ref": "LoadBalancerMonitor" } ],
				"vip": {
					"address": {
						"Fn::Join": [
							"", 
							[
								{ "Ref" : "BackendIpPrefix" },
								".2"
							]
						]
					},
					"protocol_port": 9200
				}
			}
		},
		"MasterCluster": {
			"Properties": {
				"Parameters": {
					"ClusterName": {
						"Ref" : "AWS::StackName"
					},
					"ElasticSearchBaseURL": {
						"Ref": "ElasticSearchBaseURL"
					}, 
					"ElasticSearchVersion": {
						"Ref": "ElasticSearchVersion"
					}, 
					"BackendIpPrefix": {
						"Ref": "BackendIpPrefix"
					}, 
					"BackendNetworkId": {
						"Fn::GetAtt": [
							"BackendNetwork", 
							"Outputs.NetworkId"
						]
					}, 
					"BackendSubnetId": {
						"Fn::GetAtt": [
							"BackendNetwork", 
							"Outputs.SubnetId"
						]
					}, 
					"InstanceType": {
						"Ref": "InstanceTypeMasterSvr"
					}, 
					"InstanceZone": {
						"Ref": "InstanceZone"
					}, 
					"KeyName": {
						"Ref": "KeyName"
					}, 
					"PrimaryNetworkId": {
						"Ref": "PrimaryNetworkId"
					}, 
					"PrimarySecurityGroup": {
						"Ref": "PrimaryMasterSecurityGroup"
					},
					"BackendSecurityGroup": {
						"Ref": "BackendSecurityGroup"
					},
					"TemplateBaseUrl": {
						"Ref": "TemplateBaseUrl"
					},
					"ExtraUserData": {
						"Fn::Join": [
							"",
							[
								"yum install -y httpd\n",
								"for FILE in ElasticSearch_DataNode.template ElasticSearch_Router.template; do \n",
								"curl ",
								{
									"Ref": "TemplateBaseUrl"
								}, 
								"/$FILE.in > /var/www/html/$FILE.in \n",
								"cat /var/www/html/$FILE.in | sed 's/@PrimaryNetworkId@/",
								{ "Ref": "PrimaryNetworkId" }, 
								"/g' | sed 's/@BackendNetworkId@/",
								{ "Fn::GetAtt": [ "BackendNetwork", "Outputs.NetworkId" ] }, 
								"/g' | sed 's/@BackendSubnetId@/",
								{ "Fn::GetAtt": [ "BackendNetwork", "Outputs.SubnetId" ] }, 
								"/g' | sed 's/@PrimarySecurityGroup@/",
								{ "Ref": "PrimaryDataSecurityGroup" },
								"/g' | sed 's/@BackendSecurityGroup@/",
								{ "Ref": "BackendSecurityGroup" },
								"/g' | sed 's/@ClusterName@/",
								{ "Ref": "AWS::StackName" },
								"/g' | sed 's/@InstanceZone@/",
								{ "Ref": "InstanceZone" },
								"/g' | sed 's/@KEYNAME@/",
								{ "Ref": "KeyName" },
								"/g' | sed 's!@TemplateBaseUrl@!",
								{ "Ref": "TemplateBaseUrl" },
								"!g' | sed 's!@ElasticSearchBaseURL@!",
								{ "Ref": "ElasticSearchBaseURL" },
								"/!' | sed 's/@ElasticSearchVersion@/",
								{ "Ref": "ElasticSearchVersion" },
								"/g' | sed \"s/@MASTERSVR1@/$MASTERSVR1/g\" | sed \"s/@MASTERSVR2@/$MASTERSVR2/g\" | sed \"s/@MASTERSVR3@/$MASTERSVR3/g\"",
								" > /var/www/html/$FILE\n",
								"done\n",
								"/etc/init.d/httpd restart\n"
							]
						]
					}
				}, 
				"TemplateURL": {
					"Fn::Join": [
						"",
						[
							{ "Ref": "TemplateBaseUrl" },
							"/ElasticSearch_MasterCluster.template"
						]
					]
				}
			}, 
			"Type": "AWS::CloudFormation::Stack"
		}
	}
}
